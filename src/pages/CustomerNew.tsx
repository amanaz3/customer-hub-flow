
import React from 'react';
import { useNavigate } from 'react-router-dom';
import MainLayout from '@/components/Layout/MainLayout';
import { useAuth } from '@/contexts/SecureAuthContext';
import { useCustomer } from '@/contexts/CustomerContext';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { useToast } from '@/hooks/use-toast';
import CustomerNewHeader from '@/components/Customer/CustomerNewHeader';
import CustomerForm, { CustomerFormValues } from '@/components/Customer/CustomerForm';

const CustomerNew = () => {
  const { user } = useAuth();
  const { addCustomer } = useCustomer();
  const navigate = useNavigate();
  const { toast } = useToast();

  const handleSubmit = async (data: CustomerFormValues) => {
    if (!user) {
      toast({
        title: "Error",
        description: "You must be logged in to create a customer",
        variant: "destructive",
      });
      return;
    }

    // Prepare preferred bank data
    let preferredBank = '';
    if (data.anySuitableBank) {
      preferredBank = 'Any Suitable Bank';
    } else {
      const banks = [data.preferredBank1, data.preferredBank2, data.preferredBank3]
        .filter(bank => bank && bank.trim() !== '');
      preferredBank = banks.join(', ');
    }

    const newCustomer = {
      id: '', // Will be generated by database
      name: data.name,
      mobile: data.mobile,
      company: data.company,
      email: data.email,
      leadSource: data.leadSource,
      licenseType: data.licenseType,
      amount: parseFloat(data.amount),
      status: 'Draft' as const,
      user_id: user.id,
      documents: [],
      comments: [],
      statusHistory: [],
      preferred_bank: preferredBank,
      annual_turnover: data.annualTurnover ? parseFloat(data.annualTurnover) : undefined,
      jurisdiction: data.jurisdiction,
      customer_notes: data.customerNotes,
    };
    
    try {
      console.log('Submitting customer:', newCustomer);
      await addCustomer(newCustomer);
      
      toast({
        title: "Success",
        description: "Customer application created successfully",
      });
      
      navigate('/customers');
    } catch (error) {
      console.error('Customer creation error:', error);
      
      // Show specific error message
      const errorMessage = error instanceof Error ? error.message : 'Unknown error occurred';
      
      toast({
        title: "Error",
        description: `Failed to create customer application: ${errorMessage}`,
        variant: "destructive",
      });
    }
  };

  return (
    <MainLayout>
      <div className="space-y-6">
        <CustomerNewHeader 
          title="Add New Customer" 
          description="Create a new customer application" 
        />
        
        <Card>
          <CardHeader>
            <CardTitle>Customer Information</CardTitle>
          </CardHeader>
          <CardContent>
            <CustomerForm onSubmit={handleSubmit} />
          </CardContent>
        </Card>
      </div>
    </MainLayout>
  );
};

export default CustomerNew;
